<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config></context:annotation-config>
    <aop:aspectj-autoproxy/>

    <context:component-scan base-package="com.shu"></context:component-scan>

    <tx:annotation-driven/>

    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!-- 加载配置文件 -->
    <!--<context:property-placeholder location="classpath:db.properties" />-->
    <!-- 数据库连接池 -->
   <!-- <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxActive" value="10" />
        <property name="maxIdle" value="5" />
    </bean>-->
    <!--阿里巴巴的连接池-->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"-->
          <!--destroy-method="close">-->
        <!--<property name="driverClassName" value="${jdbc.driver}" />-->
        <!--<property name="url" value="${jdbc.url}" />-->
        <!--<property name="username" value="${jdbc.username}" />-->
        <!--<property name="password" value="${jdbc.password}" />-->
        <!--<property name="maxActive" value="10" />-->
    <!--</bean>-->


    <!--主从数据库读写分离-->
    <bean id="parentDataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="initialSize" value="${pool.initialPoolSize}"/>
        <property name="maxActive" value="${pool.maxPoolSize}"/>
        <property name="maxIdle" value="${pool.maxIdle}"/>
        <property name="minIdle" value="${pool.minIdle}"/>
        <property name="suspectTimeout" value="${pool.suspectTimeout}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${pool.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${pool.minEvictableIdleTimeMillis}"/>
        <property name="testOnBorrow" value="${pool.testOnBorrow}"/>
        <property name="validationQuery" value="${pool.validationQuery}"/>
    </bean>
    <bean id="masterDataSource" parent="parentDataSource">
        <property name="driverClassName" value="${master.jdbc.driverClass}"/>
        <property name="url" value="${master.jdbc.url}"/>
        <property name="username" value="${master.jdbc.user}"/>
        <property name="password" value="${master.jdbc.password}"/>
    </bean>
    <bean id="slaveDataSource" parent="parentDataSource">
        <property name="driverClassName" value="${slave.jdbc.driverClass}"/>
        <property name="url" value="${slave.jdbc.url}"/>
        <property name="username" value="${slave.jdbc.user}"/>
        <property name="password" value="${slave.jdbc.password}"/>
    </bean>
    <!--数据库主从,动态切换数据源-->
    <bean id="dataSource" class="com.shu.spring.divide_read_write.db.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="slave" value-ref="slaveDataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"/>
    </bean>
    <bean id="dataSourceAdvice" class="com.shu.spring.divide_read_write.db.DataSourceAspect"/>
    <aop:config>
        <aop:advisor pointcut="execution(public * com.shu..*service..*.*(..))" advice-ref="dataSourceAdvice"/>
    </aop:config>

    <!-- SqlsessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- mybatis配置文件 -->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"/>
    </bean>


    <!--
    MapperScannerConfigurer：mapper的扫描器，将包下边的mapper接口自动创建代理对象，
    自动创建到spring容器中，bean的id是mapper的类名（首字母小写）
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 配置扫描包的路径
        如果要扫描多个包，中间使用半角逗号分隔
        要求mapper.xml和mapper.java同名且在同一个目录
         -->
        <property name="basePackage" value="com.shu"/>
        <!-- 使用sqlSessionFactoryBeanName -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


</beans>